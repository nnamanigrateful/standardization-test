KryptoniteApp API Blueprint

Base URL
https://yourdomain.com/

Endpoints

User Registration and Authentication

Create New User
Endpoint: POST /auth/register
Description: Registers a new user and sends a confirmation email containing the API key.
Request Body:
{
  "name": "username",
  "email": "user@example.com",
  "password": "yourpassword",
  "confirmPassword": "yourpassword"
}
Response:
{
  "message": "Registration successful. Please verify your email for confirmation."
}

Login and Request OTP
Endpoint: POST /auth/login
Description: Logs in the user and sends a 6-digit OTP to their email.
Request Body:
{
  "email": "user@example.com",
  "password": "yourpassword"
}
Response:
{
  "message": "OTP has been sent to your email."
}

Submit OTP and Get Token
Endpoint: POST /auth/verify-otp
Description: Validates the OTP and returns an authentication token.
Request Body:
{
  "email": "user@example.com",
  "otp": "123456"
}
Response:
{
  "token": "jwt_token"
}

File Upload
Upload Image
Endpoint: POST /files/upload
Description: Uploads an image file and saves it as a Base64 string.
Headers:
{
  "x-api-key": "your_api_key"
}
Request: multipart/form-data with an image file.
Response:
{
  "message": "File has been uploaded successfully."
}

Public Image Access
Get All Images
Endpoint: GET /files/images
Description: Retrieves all images.
Response:
[
  {
    "_id": "image_id",
    "kryptonianId": "user_id",
    "data": "base64_image_string",
    "mimetype": "image/jpeg"
  },
]

Get Single Image
Endpoint: GET /files/images/:id
Description: Retrieves a single image by its ID.
Response:
{
  "_id": "image_id",
  "kryptonianId": "user_id",
  "data": "base64_image_string",
  "mimetype": "image/jpeg"
}

API Key Management
Invalidate API Key
Endpoint: POST /auth/invalidateApiKey
Description: Invalidates an API key, rendering it unusable.
Request Body:
{
  "apiKey": "your_api_key"
}
Response:
{
  "message": "API key has been successfully invalidated."
}